## spring_learning - iflearn 0410 ##

# 쇼핑몰 주문 관련 개발 프로젝트
    회원 객체 다이어그램 :
        클라이언트 ---> 회원 서비스 ---> 메모리 회원 저장소
            => 위의 다이어그램 형태는 실행될 때 실제로 사용하는 저장소에 대한 인터페이스이므로 실제로
            적용되는 클래스 저장소(DB와 작용하는)는 서버가 뜰 때 동적으로 결정된다.

        클라이언트는 서비스에게 요청 및 반환을 받을 수 있고 서비스는 repo에게 클라이언트의 요청을 데이터를 구현체에 맞게 생성 및 변경을 하여 클라이언트에게 결과를 반환한다.

        enum : 제한된 값 목록을 갖는 타입이다. / 해당 프로젝트에서는 등급에 대한 목록만 타입으로 지정

        우선 데이터베이스가 확정이 되지 않은 상태에서 개발은 진행해야 하는 상태이기 때문에 HashMap<>을 사용해서 메모리 저장소를 생성한다.

        서비스 구현체는 member인터페이스를 의존해야한다. 또한 생성자를 만들어준다.

        Junit을 활용한 테스트는 개발환경에서 필수 요소 / 좋은 테스트 코드를 짜는 것 또한 중요

        역할과 구현을 분리해서 구현 객체를 조합할 수 있게 설계를 해야 협력관계를 유지하며 유연하게 변경할 수 있다.

        구현체는 추상 인터페이스에 의존, 구현체 클래스를 의존해서는 안된다./ DIP,OCP 위반에 주의

        관심사를 분리하여 각자의 역할을 수행하는 것에만 집중해야 한다.
        공연 기획자라고 생각할 수 있는 Appconfig를 별로의 클래스로 지정한다.
        
        Appconfig는 실제 동작에 필요한 구현 객체를 생성한다.
        Appconfig는 생성한 객체 인스턴스의 참조를 생성자를 통해서 주입(연결)한다.
        


