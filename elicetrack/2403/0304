## elice cloudtrack ##
- 프로그래밍이란? - 프로그램을 만드는 것
- 프로그램? - 목적을 가지고 명령어들의 조합을 만드는 것
- solving the problem
- problem? - 정의

- JVM - Java Compiler

# Java?
    1. 객체 지향 프로그래밍(OOP)
        - Object
    2. 간결함 : 자동 메모리 관리
    3. 멀티스레드 : 동시에 여러 작업을 처리
    4. 강력한 표준 라이브러리 : 방대한 표준 라이브러리 제공
    5. 보안
    6. 동적
    7. 강타입 언어 : 변수를 사용할 때는 반드시 그 타입을 명시

# 구성요소
    - 변수(Variable)
        변수 선언 : 해당 변수에 대한 정보가 컴파일러에 의해 처리
        데이터 타입 : 타입에 따라 필요한 메모리의 크기가 결정
            Data Type = 1 byte(=8 bit)
            기본 타입(Primitive Type) : 정수, 실수, 문자, 불리언 등
            참조 차입(Reference Type) : 메모리의 위치를 가리키는 참조값을 저장한다. ex. String, Array, Class 등
        메모리 할당 : 메모리의 할당된 공간에 저장됨 / 주소

    - 변수 선언(delaration)과 할당(assignment)
        ex.
            int age; //변수 선언
            age = 20; //변수 초기화 (값 할당)
            int age = 20; // 선언과 초기화를 동시에 진행

    - 상수(Constant)
        리터럴 : 소스 코드 내에서 고정된 값을 직접 나타내는 방식
        final 키워드 : 변수 앞에 사용하여 상수가 되도록 함.

    - 형변환(Type Casting)
        묵시적 변환 : 자동 변환은 자동으로 이루어지는 데이터 타입의 변환을 의미한다
        명시적 변환 : 괄호( )안에 타입을 명시하여 변환

# 연산자
    - 산술 연산자 : +, -, *, /, %
    - 복합 대입 연산자 : 연산을 축약해서 표현하는 방식 ex. +=, -=
    - 부호 연산자와 증감 연산자 : 
        ++a : 피연산자의 값을 먼저 1 증가시키고, 연산을 수행
        a++ : 연산을 먼저 수행 하고, 피연산자의 값을 1 증가
                ** 연산 후(전위) 변수에 넣느냐 변수에 넣고(후위) 연산을 하느냐라고 생각
    - 비교 연산자 : 결과로 true or false의 값을 가진다.
    - 논리 연산자 : && / || / ! 를 사용해서 조건문과 반복문에 사용한다.

# 조건문(If statement)
    - if 문 : 조건이 (true) 일 때, 코드 블럭 실행
    - else if 문 : if 조건이 거짓이면, else if의 코드 블럭 실행
    - else 문 : 앞에 if or else if의 조건이 모두 거짓을 때 해당 코드 블럭 실행



        