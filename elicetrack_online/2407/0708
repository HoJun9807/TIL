## elice cloudtrack - [3기-19] ##

# Docker

- 도커 이미지 : 컨테이너 실행에 필요한 모든 파일과 설정을 포함하는 불변의 스냅샷으로, 컨테이너의 기반

- 도커 파일 명령어
    FROM : 사용하고자 하는 이미지를 지정
        ARG : 유일하고 FROM 보다 먼저 작성할 수 있는 명령어, 빌드 시점에 정의
        FROM AS : 특정 별칭을 부여
    COPY : 빌드 할 때 파일이나 디렉토리를 컨테이너 내부로 복사
        --chown, --chmod를 통해 권한 수정
    WORKDIR : 디렉토리를 만들고, 해당 디렉토리로 이동
        상대 경로 지원하지만 가독성을 위해 절대경로 권장 / 환경변수를 참조


- 이미지 빌드
    이미지는 컨테이너를 위한 템플릿이며, 여러 개의 레이어로 구성된다.
    Dockerfile의 각 명령어는 이미지의 각 레이어로 해석된다.

    Build Context : PATH / URL / STDIN 기반


- RUN : 이미지가 빌드될 때 실행될 명령어는 Dockerfile에 정의된 명령어만으로는 부족
    shell / exec

    레이어와 커밋
        이미지는 여러 개의 레이어로 구성
        레이어는 수정 할 수 없으며, 확정하는 것은 커밋이라 한다.

    레이어 캐시
        레이어를 생성하는 것은 빌드할 때마다 반복되는 경우가 많다.
        이전 빌드와 차이가 없다면, 기존에 생성한 레이어를 사용한다.


- USER : 특정 사용자를 지정하여 명령어를 수행할 때 사용한다.
    최소한의 권한을 가지는 유저로 실행하는 것을 권장


- CMD : 컨테이너를 실행할 때 수행할 Default 명령어이다. / 무시될 수 있다 <-> ENTRYPOINT


- 환경 변수 : 프로레스가 동작할 때 참조할 수 있는 전역 변수
    Dockerfile의 ENV 명령어를 통해 설정


- EXPOSE : 컨테이너가 실행되었을 때 노출할 네트워크 포트 번호에 대한 정보를 명세하기 위해 사용
    컨테이너가 리스닝할 포트를 문서화


- 볼륨과 마운트
    컨테이너의 휘발성 : 데이터는 컨테이너가 삭제되면 같이 사라진다.
    유지해야할 정보가 있다면, 컨테이너 외부에 저장해야 한다. => 영속성
    Bind mount : 호스트 머신의 FileSystem을 직접 마운트하는 방식
    Volume : Docker에서 관리하는 특정 공간에 마운트하는 방식 -> 권장