## elice cloudtrack - [3기-03-04-02] ##

    - 제약 조건
        NOT NULL : 널 값을 비허용
        UNIQUE : 중복뒤는 값을 비허용
        DEFAULT : 기본값을 설정
        CHECK : 값의 범위를 제한하여 특정 값만 허용

        제약 조건 정의(CONSTRAINT)
            ex. CONSTRAINT 제약조건이름 제약조건 적용할속성 / NOT NULL, DEFAULT는 적용 불가

        제약 조건 추가
            ex. ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건이름 제약조건 적용할속성

            DEFALUT => ALTER TABLE 테이블명 ALTER 적용할속성 SET DEFALUT 기본값

        제약 조건 삭제
            ex. ALTER TABLE 테이블명 DROP CONSTRAINT 제약조건이름

            DEFALUT => ALTER TABLE 테이블명 ALTER 적용된속성 DROP DEFAULT

        제약 조건 변경
            ex. ALTER TABLE 테이블명 ALTER 적용된속성 SET 제약조건 변경할값

    - 키(KEY) :
        조건에 만족하는 튜플을 찾거나, 정렬할 때 기준이 되는 속성
            ex. 기본키, 외래키
            
            기본키 (Primary Key) : 서로 다른 튜플을 유일하게 식별할 수 있는 기준이 되는 속성
                => 중복되는 값 x / 널 값 x / 테이블 당 1개만 설정

            외래키 (Foreign Key) : 다른 테이블의 기본키를 참조하는 속성으로 테이블의 관계를 정의
                => 참조되는 테이블의 기본키에 없는 값은 지정할 수 없음

        기본키 설정
            ex. PRIMARY KEY

        외래키 설정
            ex. FOREIGN KET (참조할속성) REFERENCES 참조되는테이블(참조되는속성) / 한 테이블안에 두가지 속성이 외래키일 때 한번에 작성한다.

        두 개의 기본키를 하나의 기본키로 사용할 때
            ex. CONSTRAINT 새로운기본키이름 PRIMARY KEY (기본키, 기본키)

    - 무결성 제약 조건
        개체 무결성 : 기본키는 널 값과 중복된 값을 가질 수 없음
        참조 무결정 : 외래키는 널이거나 참조되는 릴레이션의 기본키 값과 동일

    - 데이터 모델링
        데이터 모델과 구성 요소
            - 개체 : 데이터로 표현하고자 하는 현실 세계의 개념이나 정보의 단위 
            - 속성 : 개체에 대한 정보
            - 관계 : 개체 간의 연관성

        과정 : 개념적 설계 --> 논리적 설계 --> 물리적 설계

    - ER 다이어그램(개체-관계 다이어그램)
        IE 표기법 : 표형식으로 객체와 속성의 관계를 표기하는 방법
        

# 정규화
    - 이상 현상 (Anomaly) :
        잘못된 데이터베이스 설계로 발생하는 오류
            삽입 이상 : 데이터를 삽입할 때 불필요한 내용까지 삽입해야 하는 문제
            갱신 이상 : 중복된 데이터 중 일부만 갱신되어 발생하는 문제
            삭제 이상 : 어떤 데이터를 삭제할 때 다른 유용한 정보도 함께 삭제되는 문제

    - 함수 종속성 : 속성들 간의 종속 관계 => 어떤 속성의 한 값이 다른 속성에 속한 하나의 값에만 매핑되는 경우를 말함

    - 정규화(NF) : 이상 현상을 제거하기 위해 데아터베이스를 구조화하는 과정
        1차 정규화 : 테이블의 컬럼이 하나의 값만 갖도록 도메인을 원자값으로 설정하는 과정

        2차 정규화 : 부분 함 수종속을 제거하고 완전 함수 종속이 되도록 테이블을 분해하는 과정
            부분 함수 종속 : 기본키를 구성하는 속성 중 일부가 결정자 역할을 하는 경우
                            => 기본키가 복합키이거나 후보키가 결정자인 경우에 발생할 수 있음
        
        3차 정규화 : 이행 함수 종속을 제거하도록 테이블을 분해하는 과정
            이행 함수 종속 : X => Y, Y => Z 라는 종속 관계가 있을 때, X => Z가 성립 

    - 정규화 정리
        BCNF : 3차 정규화와 4차 정규화 사이에 이뤄지는 과정
            결정자이면서 후보키가 아닌 것을 제거
        
        4차 정규화 : 다치 종속 제거

        5차 정규화 : 조인 종속 제거

        역정규화 : 정규화된 데이터베이스의 성능을 개선하기 위해 다시 통합하여 구조를 재구성
            => 테이블을 분해하면 여러 테이블을 조인할 때 성능이 크게 떨어질 수 있음
            => 따라서 자주사용되는 쿼리르 고려하여, 데이터 중복을 감안해 역정규화하는 것이 효율적임

# DCL
    데이터 제어어 : 데이터베이스에 접근하는 권한을 관리하는 등의 데이터 제어
        GRANT : 권한 부여
        REVOKE : 권한 회수
            ex. GRANT 권한부여옵션 ON 테이블이름.속성 TO 권한을부여할사용자이름@
            ex. REVOKE 권한부여옵션 ON 테이블이름.속성 FROM 권한을회수할사용자이름@
        FLUSH PRIVILEGES : 권한 적용
        SHOW GRANTS FOR 사용자명 :권한 조회 

        TCL : 트랜젝션 제어어
            COMMIT : 트랜잭션 작업을 반영하여 저장
            ROLLBACK : 트랜잭션 작업을 취고하여 이전 상태로 되돌림

# 인덱스
    데이터베이스 테이블의 검색 속도를 향상 시키기 위한 자료 구조
    장점 : 테이블을 조회하는 속도와 성능이 올라감
    단점 : 인덱스를 관리하기 위한 추가 작업 & 저장할 추가 공간 필요 / 경우에 따른 성능 저하

    사용 전략 :
        규모가 큰 테이블 / 데이터의 수정이 적은 & 조건이 많은 & 데이터의 중복이 낮은 컬럼
    ex. CREATE INDEX 임의의인덱스이름 ON 테이블명 (컬럼명)

 