## elice cloudtrack - 0408 ##

# ORM (Object Relational Mapping)
    OOP의 객체와 RDB의 테이블을 자동으로 매핑하는 방법
    쿼리문이 아니라 메서드로 데이터 조작 가능

    장점 : 직관적으로 코드로 데이터를 조작 
           DBMS에 대한 종속성 감소
    단점 : 복잡도가 올라가는 경우 ORM만으로는 구현의 한계가 있다.
           특정 쿼리는 듀닝이 필요하다.

    - JPA (Java Persistence API)
        - 하이버네이트(Hibernate) : JPA 인터페이스 명세를 구현한 구현체 중 하나, 
                                   자바의 인터페이스와 인터페이스를 구현한 클래스의 관계
        - Spring Data JPA : CRUD 인터페이스 제공, 인터페이스만 작성하면 된다.

            - Entity : 실제 데이터베이스 테이블과 매핑시키는 클래스
                    하나의 Entity를 하나의 테이블로 작성
                    클래스의 필드는 테이블 내부의 컬럼을 의미
            
            - DTO : 데이터 전송 객체(Data Transfer Object)
                    뷰에서 컨트롤러로 넘어오는 데이터를 담거나 컨트롤러와 서비스 사아에 주고 받는
                    담는데 사용

            - Repository : 데이터베이스에 접근하는 메소드를 사용하기 위한 인터페이스
                        CRUD를 정의하는 영역

        - 영속성(Persistence) : 데이터가 프로그램이나 프로세스가 종료된 후에도 사라지지 않고 계속
                                저장되는 특성 / 영구적인 저장소에 데이터를 저장하고 관리하는 것

    
    - Entity Manager