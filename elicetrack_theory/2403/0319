## elice cloudtrack - 0319 ##

# Linux
    - 범위가 방대하고 패턴이 다양하기 때문에, 사용하는 방법을 찾아서 읽고 적용을
    초점으로 다루어야 한다.
    - kernel :
        OS의 핵심이 되는 컴퓨터 프로그램, 시스템의 모든 것을 통제

    - shell : 
        하드웨어를 제어하는 kernel에 명령어를 전달
        - 사용자 표기
            $: 일반사용자
            #: 슈퍼사용자(root)
        - 종류
            sh : 표준 셀
            bash : 많이 사용되고 sh에 기능이 추가
            zsh : mac의 기본 shell
    
    - linux/filesystem
        - 리눅스 대부분 리소스 특수한 파일을 통해 관리
        - 사용자 데이터, 리눅스 커널, 시스템 설정 모두 파일로 관리
        - 리눅스 명령을 파일 단위로 실행

        - directory tree
            - mount(/) : 디스크가 디렉터리를 연결
            - /bin : 사용자 및 관리자가 사용하는 명령어 파일이 배치 
                   : 중요도가 높은 시스템 명령어 포함
            - /dev : 하드웨어(디스크, 키보드 등)를 다루기 위한 디바이스 파일이 
                    배치되어 있는 디렉터리
            - /etc : 애플리케이션 설정 파일, 리눅스 자체 설정 파일도 위치 
                   : 운영관리할 떄 무척 중요
            - /home : 사용자별로 할당되는 home(개인용 디렉토리). 
                    : /home/debasic(사용자명) 형식
            - /sbin : 실행 파일 포함. 관리자용 명령어 포함
            - /tmp : 임시파일 디렉토리. 파일 삭제하는 배포판도 있으므로 중요 파일 보관 X
            - /usr : 설치한 애플리케이션 실행파일, 문서, 라이브러리 등. 
                   : 루트 디렉터리와 구조가 비슷 (bin, sbin, etc)
            - /var : 변화하는 데이터 저장. 실행시 생성된 데이터, 로그, 메일 등 저장. 
                   : 많은 파일이 기록되므로 용량 관리 필요
            - /proc : 커널과 사용자 사이에 통신채널. 프로세스, 커널 등의 정보가 저장
            - pwd : 현재 사용자 디렉터리 위치 확인 

    - filepath : 절대 경로, 상대 경로
        - 파일 경로(filepath) : 파일을 불러오거나(input), 파일에 데이터를 쓰기(output) 
        할 때 파일이 어디있는지 알아야한다.
        - 절대 경로(absolute path) :
            - 최소 시작점으로부터 경유한 경로를 모두 적음
                ex. /Users/syo/Downloads/sample.pdf
        - 상대 경로(relative path) :
            - 현재 위치에서 해당 파일까지의 경로
            - 표기 :
                현재의 위치 : ./
                현재의 상위 폴더 : ../

    - 명령어 구성 :
        ls -al : 디렉토리 내의 모든 파일 리스트
        echo STR : 표준 출력으로 내용 출력
        more FILE : 파일 일부를 출력
        less FILE : 파일 일부를 출력
        head [-#] FILE : 파일의 처음부터 출력
        tail [-#] FILE : 파일의 마지막부터 출력
        touch FILE : 빈 파일을 생성
        sort FILE : 파일 혹은 결과를 정렬합니다
        uniq [-c] : 중복을 제거한 결과 출력
        grep STR FILE : 문자열을 포함한 파일을 찾습니다
        wc [-l] FILE : 파일의 라인수(-l) 를 반환
        diff FILE1 FILE2 : 파일의 차이를 비교합니다
    
    - 파이프 라인 : 앞의 결과를 뒤로 넘겨줌
        ex. sort names | uniq -c | sort -n
    
    - 프로세스 모니터링 :
        process : 하나의 작업 단위 / PID 번호로 구분
            ps, top, htop

    - 다중 사용자 권한 :
        Permission => chmod


# git
    - what is git?
        프로젝트의 버전 관리를 위한 도구
        1. 버전관리
        2. 작업 단위 나누기
            기능이 완성할 때마다 작업 내역을 저장하면 어디서 에러가 발생했는지 쉽게
            파악할 수 있다.
        3. 협업 프로젝트

    - Commit :
        현재 프로젝트의 상태를 저장하고 조회