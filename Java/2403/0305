## elice cloudtrack - [3기-01-04-01] ##

# OOP
    - 객체 지향 프로그램 : 객체와 상호작용
        객체(Object) : 상태와 동작을 가진 사람이나 사물
        패키지(Package) : 비슷한 성격의 클래스들을 모아놓은 것
    - 특성 :  
        추상화 : 공통적인 특징을 도출하여 묶는 것
        캡슐화 : 객체를 독립적으로 분리 시키고 외부로 부터의 접근을 못하도록 하는 것
        다형성 : 같은 이름의 동작을 재정의하는 것
        상속성 : 다른 클래스의 특징을 그대로 물려받아 새로운 클래스를 만드는 것

    - Class :
        객체가 어떤 상태, 어떤동작을 가져야 하는지에 대한 설계도, 설명서.
    - Instance :
        Class에 작성된 내용을 토대로 만들어진 실체화된 객체.

    - Class 선언 - class 키워드
        접근 제어자(생략) / 클래스명 / 멤버 변수 / 멤버 메서드
    - Instace 생성 - new 키워드
        ex. Person elice = new Person();

    - 멤버 변수 :
        Class 내에서 상태에 해당하는 것
        사용은 일반 변수와 크게 다르지 않다.
        접근제어자를 사용
            public, protected, private, (default)
        접근 연산자(.)을 통해 멤버 변수에 접근할 수 있다.
            접근 => 1.조회 / 2.수정
        private 접근제어자로 선언된 변수에 접근 시 오류가 발생한다.

    -추상화(Abstraction)
        귀납적 : 구체적 -> 추상적
        연역적 : 추상적 -> 구체적
    
    - Method(동작)
        매개변수를 받고 이를 처리(구현)하고 결과를 반환(return)한다.
        매개변수의 자료형은 여러 개를 가질 수 있다.
            ex. public String setName(String name)
            public : 접근 제어자
            String : 반환 값 자료 / 없으면 void로 명시
            setName : 메서드명
            String : 매개변수 자료형
            name : 매개변수
